* What this: A decent reference to NEAR's cross contract calls, callbacks, and simulation tests
** Build the contracts:
=./build.sh= builds both c1 and c2.

** Deploy the contracts:
0. =./create_accounts $YOURADDRESS= to create some dummy accounts, c1 and c2. =$YOURADDRESS= should not include =c{1,2}.= or =.testnet=.
1. =near login= with your own address
2. =./deploy.sh $YOURADDRESS=. =$YOURADDRESS= should not include =c{1,2}.= or =.testnet=.

* Interact with stuff with scripts
** Interact with the contracts, local-contract logic
In the dirs =c{1,2}/call_view_scripts=, there are scripts to view and modify the contents of each contract field.
=get_X= scripts take one argument, $YOURADDRESS.
=set_X= scripts take two arguments, $YOURADDRESS, $CHANGE_TO_THIS.

** Interact with the contracts, cross-contract-logic (only c1)
The dir =c1/cross_contract_scripts= mirrors the scripts available in =c2/call_view_scripts=, with one extra script
that deploys another instance of =Con2= to subaddress =c3.$YOURADDRESS.testnet=.

** Modify the state of Contract 1 based on the state of Contract 2 with callbacks *FAILING*
The dir =c1/callback_scripts= extends the some functionality of =cross_contract_scripts= using callbacks to modify
the state of Contract 1 based on stuff in C2. This is somewhat specific: We have to use the callback system (Not my
fave but here we are). Async/await syntax is not supported, unfortunately.

Call:
=./build.sh=
=./deploy.sh $YOURADDRESS=
=./c1/callback_scripts/SCRIPT $YOURADDRESS=
 to demo callbacks at work.

On methods of form: con2::method
	Failure [c1.dingu.testnet]: Error: Exceeded the prepaid gas
	Failure [c1.dingu.testnet]: Error: Contract method is not found

** Sidequest: Deploy Contract 2 from Contract 1
We haven't yet deployed any contract to =$YOURADDRESS.testnet=. Call script =./only_bd_c1.sh $YOURADDRESS= to build
and deploy =c1= to your address.

Then call script =./c1/cross_contract_scripts/deploy_con2_to.sh $YOURADDRESS $SUBADDRESS $YOURADDRESS=.

Note that the deploy script will fail if called from subaddress, i.e. =c1.$YOURADDRESS.testnet=.


* Interact with stuff with simulation tests
** Simulation test (only c1) *FAILING*
Minimal panic: see line 74 in =c1/tests/general.rs=.
Error: =Failure(Action #0: Can't create a new account "c2", because it already exists)=

Probable cause: I suspect deployment of contract two failed because =main_account= was deployed to a subaccount,
but I'm not certain how to verify this.
